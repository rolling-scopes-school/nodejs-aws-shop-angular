{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart/cart-routing.module.ts","./src/app/cart/cart-shipping-form/cart-shipping-form.component.ts","./src/app/cart/cart-shipping-form/cart-shipping-form.component.html","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/cart/cart.module.ts","./src/app/cart/cart.service.ts","./src/app/cart/checkout.service.ts","./src/app/cart/order-summary/order-summary.component.ts","./src/app/cart/order-summary/order-summary.component.html","./src/app/cart/product-item-checkout/product-item-checkout.component.ts","./src/app/cart/product-item-checkout/product-item-checkout.component.html","./src/app/core/api.service.ts","./src/app/core/cart-count-controls/cart-count-controls.component.ts","./src/app/core/cart-count-controls/cart-count-controls.component.html","./src/app/core/cart-count-controls/cart-count-controls.module.ts","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/core/injection-tokens/config.token.ts","./src/app/core/interceptors/error-print.interceptor.ts","./src/app/core/notification.service.ts","./src/app/products/product-item/product-item.component.ts","./src/app/products/product-item/product-item.component.html","./src/app/products/products.component.html","./src/app/products/products.component.ts","./src/app/products/products.module.ts","./src/app/products/products.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductsComponent } from './products/products.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductsComponent,\r\n  },\r\n  {\r\n    path: 'cart',\r\n    loadChildren: () => import('./cart/cart.module').then((m) => m.CartModule),\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () =>\r\n      import('./admin/admin.module').then((m) => m.AdminModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent {}\r\n","<app-header></app-header>\r\n\r\n<div class=\"container py-3 py-md-5\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule, Provider } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from './core/header/header.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ProductsModule } from './products/products.module';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { CartModule } from './cart/cart.module';\r\nimport { CONFIG_TOKEN } from './core/injection-tokens/config.token';\r\nimport { environment } from '../environments/environment';\r\nimport { ErrorPrintInterceptor } from './core/interceptors/error-print.interceptor';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nconst interceptors: Provider[] = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorPrintInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, HeaderComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatTooltipModule,\r\n    ProductsModule,\r\n    CartModule,\r\n    HttpClientModule,\r\n    MatBadgeModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    interceptors,\r\n    {\r\n      provide: CONFIG_TOKEN,\r\n      useValue: environment,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CartComponent } from './cart.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CartComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CartRoutingModule {}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { UntypedFormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-cart-shipping-form',\r\n  templateUrl: './cart-shipping-form.component.html',\r\n  styleUrls: ['./cart-shipping-form.component.scss'],\r\n})\r\nexport class CartShippingFormComponent {\r\n  @Input() shippingInfo!: UntypedFormGroup;\r\n\r\n  @Output() nextStep = new EventEmitter<void>();\r\n}\r\n","<form (ngSubmit)=\"nextStep.emit()\" [formGroup]=\"shippingInfo\">\r\n  <div class=\"row\">\r\n    <div class=\"col col-md-6\">\r\n      <mat-form-field class=\"w-100\">\r\n        <input\r\n          formControlName=\"firstName\"\r\n          name=\"firstName\"\r\n          placeholder=\"First name\"\r\n          type=\"text\"\r\n          matInput\r\n          required\r\n        />\r\n\r\n        <mat-error *ngIf=\"shippingInfo.getError('required', 'firstName')\">\r\n          First name is required!\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"col col-md-6\">\r\n      <mat-form-field class=\"w-100\">\r\n        <input\r\n          formControlName=\"lastName\"\r\n          name=\"lastName\"\r\n          placeholder=\"Last name\"\r\n          type=\"text\"\r\n          matInput\r\n          required\r\n        />\r\n\r\n        <mat-error *ngIf=\"shippingInfo.getError('required', 'lastName')\">\r\n          Last name is required!\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <mat-form-field class=\"w-100\">\r\n        <input\r\n          formControlName=\"address\"\r\n          name=\"address\"\r\n          placeholder=\"Shipping address\"\r\n          type=\"text\"\r\n          matInput\r\n          required\r\n        />\r\n\r\n        <mat-error *ngIf=\"shippingInfo.getError('required', 'address')\">\r\n          Shipping address is required!\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <mat-form-field class=\"w-100\">\r\n        <input\r\n          formControlName=\"comment\"\r\n          name=\"comment\"\r\n          placeholder=\"Comment\"\r\n          type=\"text\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Submit button to allow form submit by Enter -->\r\n  <button class=\"d-none\"></button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\r\nimport { CheckoutService } from './checkout.service';\r\nimport { ProductCheckout } from '../products/product.interface';\r\nimport { Observable } from 'rxjs';\r\nimport { CartService } from './cart.service';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: STEPPER_GLOBAL_OPTIONS,\r\n      useValue: { displayDefaultIndicatorType: false },\r\n    },\r\n  ],\r\n})\r\nexport class CartComponent implements OnInit {\r\n  products$!: Observable<ProductCheckout[]>;\r\n  totalPrice$!: Observable<number>;\r\n  totalInCart$!: Observable<number>;\r\n  cartEmpty$!: Observable<boolean>;\r\n\r\n  shippingInfo!: UntypedFormGroup;\r\n\r\n  constructor(\r\n    private readonly fb: UntypedFormBuilder,\r\n    private readonly checkoutService: CheckoutService,\r\n    private readonly cartService: CartService\r\n  ) {}\r\n\r\n  get fullName(): string {\r\n    const { firstName, lastName } = this.shippingInfo.value;\r\n    return `${firstName} ${lastName}`;\r\n  }\r\n\r\n  get address(): string {\r\n    return this.shippingInfo.value.address;\r\n  }\r\n\r\n  get comment(): string {\r\n    return this.shippingInfo.value.comment;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.shippingInfo = this.fb.group({\r\n      lastName: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      comment: '',\r\n    });\r\n\r\n    this.products$ = this.checkoutService.getProductsForCheckout().pipe(\r\n      shareReplay({\r\n        refCount: true,\r\n        bufferSize: 1,\r\n      })\r\n    );\r\n\r\n    this.totalPrice$ = this.products$.pipe(\r\n      map((products) => {\r\n        const total = products.reduce((acc, val) => acc + val.totalPrice, 0);\r\n        return +total.toFixed(2);\r\n      }),\r\n      shareReplay({\r\n        refCount: true,\r\n        bufferSize: 1,\r\n      })\r\n    );\r\n\r\n    this.totalInCart$ = this.cartService.totalInCart$;\r\n    this.cartEmpty$ = this.totalInCart$.pipe(map((count) => count > 0));\r\n  }\r\n\r\n  add(id: string): void {\r\n    this.cartService.addItem(id);\r\n  }\r\n\r\n  remove(id: string): void {\r\n    this.cartService.removeItem(id);\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"{\r\n    products: products$ | async,\r\n    totalPrice: totalPrice$ | async,\r\n    cartEmpty: cartEmpty$ | async\r\n  } as state\"\r\n  class=\"row\"\r\n>\r\n  <div class=\"col mx-auto\">\r\n    <mat-card>\r\n      <h1 class=\"text-center pt-4\" mat-card-title>Checkout</h1>\r\n\r\n      <mat-card-content>\r\n        <mat-vertical-stepper #stepper [linear]=\"true\">\r\n          <!-- Review your cart STEP -->\r\n          <mat-step label=\"Review your cart\" [completed]=\"state.cartEmpty\">\r\n            <ng-container *ngIf=\"state.cartEmpty; else emptyCartTemplate\">\r\n              <app-order-summary\r\n                *ngIf=\"state.products; else loaderTemplate\"\r\n                (add)=\"add($event)\"\r\n                (remove)=\"remove($event)\"\r\n                [products]=\"state.products\"\r\n                [totalPrice]=\"state.totalPrice!\"\r\n                [showControls]=\"true\"\r\n              ></app-order-summary>\r\n\r\n              <ng-template #loaderTemplate>\r\n                <div class=\"py-5\">\r\n                  <mat-spinner [diameter]=\"40\" class=\"mx-auto\"></mat-spinner>\r\n                </div>\r\n              </ng-template>\r\n\r\n              <div class=\"text-right\">\r\n                <button\r\n                  color=\"primary\"\r\n                  class=\"text-uppercase\"\r\n                  mat-flat-button\r\n                  matStepperNext\r\n                >\r\n                  next\r\n                </button>\r\n              </div>\r\n            </ng-container>\r\n          </mat-step>\r\n\r\n          <!-- Shipping address STEP -->\r\n          <mat-step label=\"Shipping address\" [stepControl]=\"shippingInfo\">\r\n            <h2>Shipping address</h2>\r\n\r\n            <app-cart-shipping-form\r\n              (nextStep)=\"stepper.next()\"\r\n              [shippingInfo]=\"shippingInfo\"\r\n            ></app-cart-shipping-form>\r\n\r\n            <div class=\"text-right\">\r\n              <button class=\"text-uppercase\" mat-button matStepperPrevious>\r\n                back\r\n              </button>\r\n              <button\r\n                color=\"primary\"\r\n                class=\"text-uppercase\"\r\n                mat-flat-button\r\n                matStepperNext\r\n              >\r\n                next\r\n              </button>\r\n            </div>\r\n          </mat-step>\r\n\r\n          <!-- Review your order STEP -->\r\n          <mat-step label=\"Review your order\">\r\n            <app-order-summary\r\n              *ngIf=\"state.products\"\r\n              [products]=\"state.products\"\r\n              [totalPrice]=\"state.totalPrice!\"\r\n              [showControls]=\"false\"\r\n            ></app-order-summary>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col col-md-6\">\r\n                <h2>Shipping</h2>\r\n                <p>{{ fullName }}</p>\r\n                <p>{{ address }}</p>\r\n              </div>\r\n              <div class=\"col col-md-6\">\r\n                <h2>Comment</h2>\r\n                <p>{{ comment }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"text-right\">\r\n              <button class=\"text-uppercase\" mat-button matStepperPrevious>\r\n                back\r\n              </button>\r\n              <button color=\"primary\" class=\"text-uppercase\" mat-flat-button>\r\n                place order\r\n              </button>\r\n            </div>\r\n          </mat-step>\r\n        </mat-vertical-stepper>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #emptyCartTemplate>\r\n  <div class=\"lead\">\r\n    The cart is empty. Didn't you like anything in our shop?\r\n  </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CartComponent } from './cart.component';\r\nimport { CartRoutingModule } from './cart-routing.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ProductItemCheckoutComponent } from './product-item-checkout/product-item-checkout.component';\r\nimport { CartCountControlsModule } from '../core/cart-count-controls/cart-count-controls.module';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { CartShippingFormComponent } from './cart-shipping-form/cart-shipping-form.component';\r\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CartComponent,\r\n    ProductItemCheckoutComponent,\r\n    CartShippingFormComponent,\r\n    OrderSummaryComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CartRoutingModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    CartCountControlsModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [CartComponent],\r\n})\r\nexport class CartModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartService {\r\n  /** Key - item id, value - ordered amount */\r\n  #cartSource = new BehaviorSubject<Record<string, number>>({});\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  cart$ = this.#cartSource.asObservable();\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  totalInCart$: Observable<number> = this.cart$.pipe(\r\n    map((cart) => {\r\n      const values = Object.values(cart);\r\n\r\n      if (!values.length) {\r\n        return 0;\r\n      }\r\n\r\n      return values.reduce((acc, val) => acc + val, 0);\r\n    }),\r\n    shareReplay({\r\n      refCount: true,\r\n      bufferSize: 1,\r\n    })\r\n  );\r\n\r\n  constructor() {}\r\n\r\n  addItem(id: string): void {\r\n    this.updateCount(id, 1);\r\n  }\r\n\r\n  removeItem(id: string): void {\r\n    this.updateCount(id, -1);\r\n  }\r\n\r\n  empty(): void {\r\n    this.#cartSource.next({});\r\n  }\r\n\r\n  private updateCount(id: string, type: 1 | -1): void {\r\n    const val = this.#cartSource.getValue();\r\n    const newVal = {\r\n      ...val,\r\n    };\r\n\r\n    if (!(id in newVal)) {\r\n      newVal[id] = 0;\r\n    }\r\n\r\n    if (type === 1) {\r\n      newVal[id] = ++newVal[id];\r\n      this.#cartSource.next(newVal);\r\n      return;\r\n    }\r\n\r\n    if (newVal[id] === 0) {\r\n      console.warn('No match. Skipping...');\r\n      return;\r\n    }\r\n\r\n    newVal[id]--;\r\n\r\n    if (!newVal[id]) {\r\n      delete newVal[id];\r\n    }\r\n\r\n    this.#cartSource.next(newVal);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CartService } from './cart.service';\r\nimport { ProductsService } from '../products/products.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductCheckout } from '../products/product.interface';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CheckoutService {\r\n  constructor(\r\n    private readonly cartService: CartService,\r\n    private readonly productsService: ProductsService\r\n  ) {}\r\n\r\n  getProductsForCheckout(): Observable<ProductCheckout[]> {\r\n    return this.cartService.cart$.pipe(\r\n      switchMap((cart) =>\r\n        this.productsService.getProductsForCheckout(Object.keys(cart)).pipe(\r\n          map((products) =>\r\n            products.map((product) => ({\r\n              ...product,\r\n              orderedCount: cart[product.id],\r\n              totalPrice: +(cart[product.id] * product.price).toFixed(2),\r\n            }))\r\n          )\r\n        )\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ProductCheckout } from '../../products/product.interface';\r\n\r\n@Component({\r\n  selector: 'app-order-summary',\r\n  templateUrl: './order-summary.component.html',\r\n  styleUrls: ['./order-summary.component.scss'],\r\n})\r\nexport class OrderSummaryComponent {\r\n  @Input() products!: ProductCheckout[];\r\n  @Input() showControls!: boolean;\r\n  @Input() totalPrice!: number;\r\n\r\n  /** Add productId */\r\n  @Output() add = new EventEmitter<string>();\r\n  /** Remove productId */\r\n  @Output() remove = new EventEmitter<string>();\r\n}\r\n","<h2>Order summary</h2>\r\n\r\n<ng-container>\r\n  <app-product-item-checkout\r\n    *ngFor=\"let product of products\"\r\n    (add)=\"add.emit(product.id)\"\r\n    (remove)=\"remove.emit(product.id)\"\r\n    [product]=\"product\"\r\n    [hideControls]=\"!showControls\"\r\n  ></app-product-item-checkout>\r\n</ng-container>\r\n\r\n<div class=\"row\">\r\n  <h3 class=\"col flex-grow-1\">Shipping</h3>\r\n  <span class=\"col flex-grow-0\">Free</span>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <h3 class=\"col flex-grow-1\">Total</h3>\r\n  <b class=\"col flex-grow-0\" style=\"font-size: 18px\">{{\r\n    totalPrice | number: \"1.2-2\" | currency\r\n  }}</b>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ProductCheckout } from '../../products/product.interface';\r\n\r\n@Component({\r\n  selector: 'app-product-item-checkout',\r\n  templateUrl: './product-item-checkout.component.html',\r\n  styleUrls: ['./product-item-checkout.component.scss'],\r\n})\r\nexport class ProductItemCheckoutComponent {\r\n  @Input() product!: ProductCheckout;\r\n  @Input() hideControls = false;\r\n\r\n  @Output() add = new EventEmitter<void>();\r\n  @Output() remove = new EventEmitter<void>();\r\n}\r\n","<mat-card class=\"mb-3\">\r\n  <div class=\"row align-items-center\">\r\n    <div\r\n      *ngIf=\"!hideControls\"\r\n      class=\"col-12 col-md-3 order-3 order-md-0 text-center\"\r\n    >\r\n      <app-cart-count-controls\r\n        (decrement)=\"remove.emit()\"\r\n        (increment)=\"add.emit()\"\r\n        [productName]=\"product.title\"\r\n        [count]=\"product.orderedCount\"\r\n        [available]=\"product.count\"\r\n      ></app-cart-count-controls>\r\n    </div>\r\n    <div\r\n      [class.col-md-6]=\"!hideControls\"\r\n      [class.col-md-9]=\"hideControls\"\r\n      class=\"col-12 col-md-6\"\r\n    >\r\n      <h3 class=\"font-weight-bold mb-1\">{{ product.title }}</h3>\r\n      <p class=\"text-muted\">{{ product.description }}</p>\r\n    </div>\r\n    <div class=\"col-12 col-md-3\">\r\n      {{ product.price | number: \"1.2-2\" | currency }} x\r\n      {{ product.orderedCount }} =\r\n      {{ product.totalPrice | number: \"1.2-2\" | currency }}\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { ApiEndpoint, Config } from '../../environments/config.interface';\r\nimport { CONFIG_TOKEN } from './injection-tokens/config.token';\r\nimport { Location } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/** Base class for services working with APIs */\r\n@Injectable()\r\nexport abstract class ApiService {\r\n  protected readonly config: Config;\r\n  protected readonly http: HttpClient;\r\n\r\n  protected constructor(protected readonly injector: Injector) {\r\n    this.config = injector.get(CONFIG_TOKEN);\r\n    this.http = injector.get(HttpClient);\r\n  }\r\n\r\n  endpointEnabled(api: ApiEndpoint): boolean {\r\n    return this.config.apiEndpointsEnabled[api];\r\n  }\r\n\r\n  /** Combines API endpoint and path into a single URL */\r\n  protected getUrl(api: ApiEndpoint, path: string): string {\r\n    return Location.joinWithSlash(this.config.apiEndpoints[api], path);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cart-count-controls',\r\n  templateUrl: './cart-count-controls.component.html',\r\n  styleUrls: ['./cart-count-controls.component.scss'],\r\n  exportAs: 'countControls',\r\n})\r\nexport class CartCountControlsComponent {\r\n  @Input() count!: number;\r\n  @Input() available!: number;\r\n  @Input() productName!: string;\r\n\r\n  @Output() increment = new EventEmitter<void>();\r\n  @Output() decrement = new EventEmitter<void>();\r\n\r\n  @ViewChild('addBtn', { read: ElementRef })\r\n  addBtn!: ElementRef<HTMLButtonElement>;\r\n\r\n  focusAddBtn(): void {\r\n    this.addBtn.nativeElement.focus();\r\n  }\r\n}\r\n","<!-- Remove from cart btn -->\r\n<button\r\n  (click)=\"decrement.emit()\"\r\n  color=\"accent\"\r\n  matTooltip=\"Remove {{ productName }} from cart\"\r\n  mat-icon-button\r\n>\r\n  <mat-icon>remove</mat-icon>\r\n</button>\r\n\r\n{{ count }}\r\n<!-- Add to cart btn -->\r\n<button\r\n  #addBtn\r\n  (click)=\"increment.emit()\"\r\n  [disabled]=\"!!available && count >= available\"\r\n  color=\"accent\"\r\n  matTooltip=\"Add {{ productName }} to cart\"\r\n  mat-icon-button\r\n>\r\n  <mat-icon>add</mat-icon>\r\n</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CartCountControlsComponent } from './cart-count-controls.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [CartCountControlsComponent],\r\n  imports: [CommonModule, MatButtonModule, MatTooltipModule, MatIconModule],\r\n  exports: [CartCountControlsComponent],\r\n})\r\nexport class CartCountControlsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from '../../cart/cart.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  totalInCart$!: Observable<number>;\r\n\r\n  constructor(private readonly cartService: CartService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.totalInCart$ = this.cartService.totalInCart$;\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <a routerLink=\"/\" matTooltip=\"Open main page\" class=\"home-link\">E-shop</a>\r\n\r\n  <div class=\"d-flex flex-fill\"></div>\r\n\r\n  <!-- Account btn -->\r\n  <button\r\n    [matMenuTriggerFor]=\"menu\"\r\n    matTooltip=\"Open account menu\"\r\n    mat-icon-button\r\n  >\r\n    <mat-icon>account_circle</mat-icon>\r\n  </button>\r\n\r\n  <!-- Cart btn -->\r\n  <button routerLink=\"cart\" matTooltip=\"Go to cart\" mat-icon-button>\r\n    <mat-icon [matBadge]=\"totalInCart$ | async\" matBadgeColor=\"accent\"\r\n      >shopping_cart</mat-icon\r\n    >\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<mat-menu #menu=\"matMenu\">\r\n  <a routerLink=\"admin/orders\" mat-menu-item>Manage orders</a>\r\n  <a routerLink=\"admin/products\" mat-menu-item>Manage products</a>\r\n</mat-menu>\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Config } from '../../../environments/config.interface';\r\n\r\nexport const CONFIG_TOKEN = new InjectionToken<Config>('CONFIG_TOKEN');\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { NotificationService } from '../notification.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorPrintInterceptor implements HttpInterceptor {\r\n  constructor(private readonly notificationService: NotificationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: () => {\r\n          const url = new URL(request.url);\r\n\r\n          this.notificationService.showError(\r\n            `Request to \"${url.pathname}\" failed. Check the console for the details`,\r\n            0\r\n          );\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  constructor(private readonly snackBar: MatSnackBar) {}\r\n\r\n  /**\r\n   * Show message with an error\r\n   *\r\n   * @param text Error text message\r\n   * @param duration Duration to close after. 0 to close manually only\r\n   */\r\n  showError(text: string, duration = 3000) {\r\n    this.snackBar.open(text, 'Dismiss', {\r\n      duration,\r\n      panelClass: 'shop-snackbar-error',\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Product } from '../product.interface';\r\nimport { CartService } from '../../cart/cart.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay, tap } from 'rxjs/operators';\r\nimport { CartCountControlsComponent } from '../../core/cart-count-controls/cart-count-controls.component';\r\n\r\n@Component({\r\n  selector: 'app-product-item',\r\n  templateUrl: './product-item.component.html',\r\n  styleUrls: ['./product-item.component.scss'],\r\n})\r\nexport class ProductItemComponent implements OnInit {\r\n  @Input() product!: Product;\r\n  @Input() index!: number;\r\n\r\n  @ViewChild('cartBtn', { static: false, read: ElementRef }) cartBtn:\r\n    | ElementRef<HTMLButtonElement>\r\n    | undefined;\r\n  @ViewChild('controls', { static: false }) countControls:\r\n    | CartCountControlsComponent\r\n    | undefined;\r\n\r\n  countInCart$!: Observable<number>;\r\n\r\n  constructor(private readonly cartService: CartService) {}\r\n\r\n  get id(): string {\r\n    return this.product.id;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.countInCart$ = this.cartService.cart$.pipe(\r\n      map((cart) => {\r\n        if (!(this.id in cart)) {\r\n          return 0;\r\n        }\r\n\r\n        return cart[this.id];\r\n      }),\r\n      this.updateFocusIfNeeded(),\r\n      shareReplay({\r\n        bufferSize: 1,\r\n        refCount: true,\r\n      })\r\n    );\r\n  }\r\n\r\n  add(): void {\r\n    this.cartService.addItem(this.id);\r\n  }\r\n\r\n  remove(): void {\r\n    this.cartService.removeItem(this.id);\r\n  }\r\n\r\n  /** Move focus to a corresponding control when controls switch */\r\n  private updateFocusIfNeeded() {\r\n    let prev: number;\r\n\r\n    return (observable: Observable<number>): Observable<number> =>\r\n      observable.pipe(\r\n        tap((curr) => {\r\n          if (prev === 0 && curr === 1) {\r\n            setTimeout(() => this.countControls?.focusAddBtn());\r\n          } else if (prev === 1 && curr === 0) {\r\n            setTimeout(() => this.cartBtn?.nativeElement.focus());\r\n          }\r\n\r\n          prev = curr;\r\n        })\r\n      );\r\n  }\r\n}\r\n","<mat-card>\n  <div mat-card-image class=\"img-container\">\n    <div class=\"img-container__inner\">\n      <img src=\"https://source.unsplash.com/random?sig={{ index }}\" alt=\"\" />\n    </div>\n  </div>\n\n  <mat-card-header>\n    <mat-card-title>\n      {{ product.title }}\n    </mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    <p>{{ product.price | number : \"1.2-2\" | currency }}</p>\n  </mat-card-content>\n\n  <mat-card-actions>\n    <!-- Add to cart btn -->\n    <button\n      #cartBtn\n      *ngIf=\"(countInCart$ | async) === 0\"\n      (click)=\"add()\"\n      color=\"accent\"\n      matTooltip=\"Add {{ product.title }} to cart\"\n      mat-icon-button\n    >\n      <mat-icon>shopping_cart</mat-icon>\n    </button>\n\n    <app-cart-count-controls\n      #controls=\"countControls\"\n      *ngIf=\"(countInCart$ | async)! > 0\"\n      (increment)=\"add()\"\n      (decrement)=\"remove()\"\n      [productName]=\"product.title\"\n      [count]=\"(countInCart$ | async)!\"\n      [available]=\"product.count\"\n    ></app-cart-count-controls>\n  </mat-card-actions>\n</mat-card>\n","<main class=\"container\">\r\n  <app-product-item\r\n    *ngFor=\"let product of products$ | async; let i = index\"\r\n    [product]=\"product\"\r\n    [index]=\"i\"\r\n  >\r\n  </app-product-item>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from './products.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from './product.interface';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss'],\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  readonly products$: Observable<\r\n    Product[]\r\n  > = this.productsService.getProducts();\r\n\r\n  constructor(private readonly productsService: ProductsService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsComponent } from './products.component';\r\nimport { ProductItemComponent } from './product-item/product-item.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { CartCountControlsModule } from '../core/cart-count-controls/cart-count-controls.module';\r\n\r\n@NgModule({\r\n  declarations: [ProductsComponent, ProductItemComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    CartCountControlsModule,\r\n  ],\r\n  exports: [ProductsComponent],\r\n})\r\nexport class ProductsModule {}\r\n","// import { Injectable } from '@angular/core';\n\n// import { EMPTY, Observable, of, throwError } from 'rxjs';\n// import { map } from 'rxjs/operators';\n\n// import { Product } from './product.interface';\n\n// import { ApiService } from '../core/api.service';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class ProductsService extends ApiService {\n//   createNewProduct(product: Product): Observable<Product> {\n//     if (!this.endpointEnabled('bff')) {\n//       console.warn(\n//         'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n//       );\n//       return EMPTY;\n//     }\n\n//     const url = this.getUrl('bff', 'products');\n//     return this.http.post<Product>(url, product);\n//   }\n\n//   editProduct(id: string, changedProduct: Product): Observable<Product> {\n//     if (!this.endpointEnabled('bff')) {\n//       console.warn(\n//         'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n//       );\n//       return EMPTY;\n//     }\n\n//     const url = this.getUrl('bff', `products/${id}`);\n//     return this.http.put<Product>(url, changedProduct);\n//   }\n\n//   getProductById(id: string): Observable<Product | null> {\n//     if (!this.endpointEnabled('bff')) {\n//       console.warn(\n//         'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n//       );\n//       return this.http\n//         .get<Product[]>('/assets/products.json')\n//         .pipe(\n//           map(\n//             (products) => products.find((product) => product.id === id) || null\n//           )\n//         );\n//     }\n\n//     const url = this.getUrl('bff', `products/${id}`);\n//     return this.http\n//       .get<{ product: Product }>(url)\n//       .pipe(map((resp) => resp.product));\n//   }\n\n//   getProducts(): Observable<Product[]> {\n//     const apiGatewayUrl =\n//       'https://zbb338g8f1.execute-api.eu-west-1.amazonaws.com/prod/products';\n//     const url = `${apiGatewayUrl}`;\n\n//     return this.http.get<Product[]>(url);\n//   }\n\n//   getProductsForCheckout(ids: string[]): Observable<Product[]> {\n//     if (!ids.length) {\n//       return of([]);\n//     }\n\n//     return this.getProducts().pipe(\n//       map((products) => products.filter((product) => ids.includes(product.id)))\n//     );\n//   }\n// }\nimport { Injectable } from '@angular/core';\n\nimport { EMPTY, Observable, of, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Product } from './product.interface';\n\nimport { ApiService } from '../core/api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService extends ApiService {\n  createNewProduct(product: Product): Observable<Product> {\n    if (!this.endpointEnabled('bff')) {\n      console.warn(\n        'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n      );\n      return EMPTY;\n    }\n\n    const url = this.getUrl('bff', 'products');\n    return this.http.post<Product>(url, product);\n  }\n\n  editProduct(id: string, changedProduct: Product): Observable<Product> {\n    if (!this.endpointEnabled('bff')) {\n      console.warn(\n        'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n      );\n      return EMPTY;\n    }\n\n    const url = this.getUrl('bff', `products/${id}`);\n    return this.http.put<Product>(url, changedProduct);\n  }\n\n  getProductById(id: string): Observable<Product | null> {\n    if (!this.endpointEnabled('bff')) {\n      console.warn(\n        'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n      );\n      return this.http\n        .get<Product[]>('/assets/products.json')\n        .pipe(\n          map(\n            (products) => products.find((product) => product.id === id) || null\n          )\n        );\n    }\n\n    const url = this.getUrl('bff', `products/${id}`);\n    return this.http\n      .get<{ product: Product }>(url)\n      .pipe(map((resp) => resp.product));\n  }\n\n  getProducts(): Observable<Product[]> {\n    const apiGatewayUrl =\n      'https://zbb338g8f1.execute-api.eu-west-1.amazonaws.com/prod/products';\n    const url = `${apiGatewayUrl}`;\n\n    return this.http.get<Product[]>(url);\n  }\n\n  // getProducts(): Observable<Product[]> {\n  //   if (!this.endpointEnabled('bff')) {\n  //     console.warn(\n  //       'Endpoint \"bff\" is disabled. To enable change your environment.ts config'\n  //     );\n  //     return this.http.get<Product[]>('/assets/products.json');\n  //   }\n\n  //   const url = this.getUrl('bff', 'products');\n  //   return this.http.get<Product[]>(url);\n  // }\n\n  getProductsForCheckout(ids: string[]): Observable<Product[]> {\n    if (!ids.length) {\n      return of([]);\n    }\n\n    return this.getProducts().pipe(\n      map((products) => products.filter((product) => ids.includes(product.id)))\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { Config } from './config.interface';\n\nexport const environment: Config = {\n  production: false,\n  apiEndpoints: {\n    product: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n    order: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n    import: 'https://0ow5tmvkxl.execute-api.eu-west-1.amazonaws.com/prod',\n    bff: 'https://zbb338g8f1.execute-api.eu-west-1.amazonaws.com/prod',\n    cart: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  },\n  apiEndpointsEnabled: {\n    product: false,\n    order: false,\n    import: true,\n    bff: false,\n    cart: false,\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":["RouterModule","ProductsComponent","routes","path","component","loadChildren","then","m","CartModule","AdminModule","AppRoutingModule","forRoot","imports","exports","AppComponent","selectors","decls","vars","consts","template","i0","BrowserModule","BrowserAnimationsModule","HeaderComponent","MatToolbarModule","MatButtonModule","MatIconModule","MatMenuModule","MatTooltipModule","ProductsModule","HTTP_INTERCEPTORS","HttpClientModule","MatBadgeModule","CONFIG_TOKEN","environment","ErrorPrintInterceptor","MatSnackBarModule","interceptors","provide","useClass","multi","AppModule","bootstrap","useValue","declarations","CartComponent","CartRoutingModule","forChild","EventEmitter","CartShippingFormComponent","constructor","inputs","shippingInfo","outputs","nextStep","ctx","Validators","STEPPER_GLOBAL_OPTIONS","map","shareReplay","fb","checkoutService","cartService","fullName","firstName","lastName","value","address","comment","ngOnInit","group","required","products$","getProductsForCheckout","pipe","refCount","bufferSize","totalPrice$","products","total","reduce","acc","val","totalPrice","toFixed","totalInCart$","cartEmpty$","count","add","id","addItem","remove","removeItem","features","displayDefaultIndicatorType","CommonModule","MatCardModule","MatStepperModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","ProductItemCheckoutComponent","CartCountControlsModule","MatProgressSpinnerModule","OrderSummaryComponent","BehaviorSubject","CartService","_CartService_cartSource","__classPrivateFieldGet","asObservable","cart$","cart","values","Object","length","updateCount","empty","next","type","getValue","newVal","console","warn","factory","providedIn","switchMap","CheckoutService","productsService","keys","product","orderedCount","price","showControls","hideControls","Location","HttpClient","ApiService","injector","config","get","http","endpointEnabled","api","apiEndpointsEnabled","getUrl","joinWithSlash","apiEndpoints","ElementRef","CartCountControlsComponent","focusAddBtn","addBtn","nativeElement","focus","viewQuery","InjectionToken","tap","notificationService","intercept","request","handle","error","url","URL","showError","pathname","NotificationService","snackBar","text","duration","open","panelClass","ProductItemComponent","countInCart$","updateFocusIfNeeded","prev","observable","curr","setTimeout","countControls","cartBtn","getProducts","EMPTY","of","ProductsService","createNewProduct","post","editProduct","changedProduct","put","getProductById","find","resp","apiGatewayUrl","ids","filter","includes","production","order","import","bff","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}